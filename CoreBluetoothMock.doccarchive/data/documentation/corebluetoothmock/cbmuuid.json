{"hierarchy":{"paths":[["doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock"]]},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMError","doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMATTError"],"title":"Other","anchor":"Other"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock\/cbmuuid"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"CBMUUID","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"CBUUID","preciseIdentifier":"c:objc(cs)CBUUID","kind":"typeIdentifier"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Instances of the "},{"code":"CBMUUID","type":"codeVoice"},{"type":"text","text":" class represent the 128-bit universally unique identifiers (UUIDs)"},{"type":"text","text":" "},{"text":"of attributes used in Bluetooth low energy communication, such as a peripheralâ€™s services,","type":"text"},{"text":" ","type":"text"},{"text":"characteristics, and descriptors. This class provides a number of factory methods for dealing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with long UUIDs when developing your app. For example, instead of passing around the string"},{"type":"text","text":" "},{"type":"text","text":"representation of a 128-bit Bluetooth low energy attribute in your code, you can create a"},{"type":"text","text":" "},{"code":"CBMUUID","type":"codeVoice"},{"type":"text","text":" object that represents it, and pass that around instead."}]},{"type":"paragraph","inlineContent":[{"text":"The Bluetooth Special Interest Group (SIG) publishes a list of commonly-used UUIDs,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"many of which are 16- or 32-bits for convenience. The "},{"code":"CBMUUID","type":"codeVoice"},{"type":"text","text":" class provides methods"},{"type":"text","text":" "},{"type":"text","text":"that automatically transform these predefined shorter UUIDs into their 128-bit equivalent UUIDs."},{"type":"text","text":" "},{"type":"text","text":"When you create a CBMUUID object from a predefined 16- or 32-bit UUID, Core Bluetooth"},{"type":"text","text":" "},{"text":"pre-fills the rest of the 128-bit UUID with the Bluetooth base UUID, as defined in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Bluetooth 4.0 specification, Volume 3, Part F, Section 3.2.1."}]},{"type":"paragraph","inlineContent":[{"text":"In addition to providing methods for creating ","type":"text"},{"type":"codeVoice","code":"CBMUUID"},{"type":"text","text":" objects, this class defines constants"},{"text":" ","type":"text"},{"type":"text","text":"that represent the UUIDs of the Bluetooth-defined characteristic descriptors, as defined in the"},{"type":"text","text":" "},{"text":"Bluetooth 4.0 specification, Volume 3, Part G, Section 3.3.3.","type":"text"}]}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMUUID"},"metadata":{"title":"CBMUUID","roleHeading":"Type Alias","modules":[{"name":"CoreBluetoothMock"}],"externalID":"s:17CoreBluetoothMock7CBMUUIDa","navigatorTitle":[{"text":"CBMUUID","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMUUID","kind":"identifier"}],"symbolKind":"typealias","role":"symbol"},"abstract":[{"type":"text","text":"A universally unique identifier, as defined by Bluetooth standards."}],"references":{"doc://org.cocoapods.CoreBluetoothMock/documentation/CoreBluetoothMock/CBMError":{"identifier":"doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMError","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMError","kind":"identifier"}],"abstract":[{"text":"An error that Core Bluetooth returns during Bluetooth transactions.","type":"text"}],"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmerror","title":"CBMError","navigatorTitle":[{"kind":"identifier","text":"CBMError"}],"type":"topic","kind":"symbol"},"doc://org.cocoapods.CoreBluetoothMock/documentation/CoreBluetoothMock/CBMUUID":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMUUID"}],"type":"topic","url":"\/documentation\/corebluetoothmock\/cbmuuid","identifier":"doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMUUID","title":"CBMUUID","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMUUID"}],"abstract":[{"text":"A universally unique identifier, as defined by Bluetooth standards.","type":"text"}]},"doc://org.cocoapods.CoreBluetoothMock/documentation/CoreBluetoothMock":{"identifier":"doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock","type":"topic","kind":"symbol","abstract":[{"text":"Test ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CoreBluetooth"}]},{"text":" features in your app using mocks.","type":"text"}],"title":"CoreBluetoothMock","role":"collection"},"doc://org.cocoapods.CoreBluetoothMock/documentation/CoreBluetoothMock/CBMATTError":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMATTError"}],"navigatorTitle":[{"text":"CBMATTError","kind":"identifier"}],"title":"CBMATTError","identifier":"doc:\/\/org.cocoapods.CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMATTError","role":"symbol","abstract":[{"type":"text","text":"An error that Core Bluetooth returns while using Attribute Protocol (ATT)."}],"type":"topic","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmatterror"}}}