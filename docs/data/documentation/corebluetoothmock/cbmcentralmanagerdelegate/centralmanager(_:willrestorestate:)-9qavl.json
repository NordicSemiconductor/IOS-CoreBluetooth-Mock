{"identifier":{"url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-9qavl","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"For apps that opt-in to state preservation and restoration, this is the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"first method invoked when your app is relaunched into the background to"},{"text":" ","type":"text"},{"text":"complete some Bluetooth-related task.","type":"text"}],"metadata":{"role":"symbol","title":"centralManager(_:willRestoreState:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"centralManager"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","text":"CBMCentralManager"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"willRestoreState"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"])"}],"required":true,"externalID":"s:17CoreBluetoothMock25CBMCentralManagerDelegateP07centralE0_16willRestoreStateyAA0dE0C_SDySSypGtF","symbolKind":"method","modules":[{"name":"CoreBluetoothMock"}],"roleHeading":"Instance Method"},"kind":"symbol","defaultImplementationsSections":[{"title":"CBMCentralManagerDelegate Implementations","anchor":"CBMCentralManagerDelegate-Implementations","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-4zyhg"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh"],"title":"Initialization","anchor":"Initialization"}],"hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:willrestorestate:)-9qavl"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"centralManager","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"central","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"willRestoreState"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"dict"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"])","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The central manager providing this information."}]}],"name":"central"},{"name":"dict","content":[{"inlineContent":[{"text":"A dictionary containing information about central that was","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preserved by the system at the time the app was terminated."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to synchronize your appâ€™s state with the state of the Bluetooth system."}]},{"inlineContent":[{"type":"text","text":"When mocking is enabled, the returned state is obtained using"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock\/simulateStateRestoration"},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate":{"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"CBMCentralManagerDelegate","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","abstract":[{"type":"text","text":"A protocol that provides updates for the discovery and management of peripheral devices."}],"type":"topic","title":"CBMCentralManagerDelegate","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh":{"title":"centralManager(_:didUpdateANCSAuthorizationFor:)","required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol","type":"topic","abstract":[{"text":"This method is invoked when the authorization status changes for a","type":"text"},{"type":"text","text":" "},{"text":"peripheral connected with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)"},{"text":" ","type":"text"},{"type":"text","text":"option "},{"type":"codeVoice","code":"CBMConnectPeripheralOptionRequiresANCS"},{"type":"text","text":"."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"centralManager","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"kind":"text","text":", "},{"text":"didUpdateANCSAuthorizationFor","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"CBMPeripheral","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP"},{"kind":"text","text":")"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:didupdateancsauthorizationfor:)-6msdh"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:willRestoreState:)-9qavl":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"text":"CBMCentralManager","kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-9qavl","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"For apps that opt-in to state preservation and restoration, this is the"},{"type":"text","text":" "},{"text":"first method invoked when your app is relaunched into the background to","type":"text"},{"type":"text","text":" "},{"text":"complete some Bluetooth-related task.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:willrestorestate:)-9qavl","defaultImplementations":1,"title":"centralManager(_:willRestoreState:)","required":true},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"kind":"symbol","abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"title":"CBMCentralManager","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMCentralManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","navigatorTitle":[{"text":"CBMCentralManager","kind":"identifier"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerMock/simulateStateRestoration":{"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock\/simulateStateRestoration","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagermock\/simulatestaterestoration","abstract":[{"text":"This simulation method is called when a mock central manager was","type":"text"},{"text":" ","type":"text"},{"text":"created with an option to restore the state","type":"text"},{"type":"text","text":" "},{"text":"(","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionRestoreIdentifierKey"},{"type":"text","text":")."}],"title":"simulateStateRestoration","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"simulateStateRestoration"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"]?)?","kind":"text"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManagerDidUpdateState(_:)":{"abstract":[{"type":"text","text":"Invoked whenever the central managerâ€™s state has been updated."}],"type":"topic","required":true,"title":"centralManagerDidUpdateState(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanagerdidupdatestate(_:)","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test "},{"inlineContent":[{"text":"CoreBluetooth","type":"text"}],"type":"strong"},{"type":"text","text":" features in your app using mocks."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock","role":"collection","title":"CoreBluetoothMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerOptionRestoreIdentifierKey":{"type":"topic","title":"CBMCentralManagerOptionRestoreIdentifierKey","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerOptionRestoreIdentifierKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionRestoreIdentifierKey","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanageroptionrestoreidentifierkey","abstract":[{"type":"text","text":"A string containing a unique identifier (UID) for the central manager to instantiate."}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:willRestoreState:)-4zyhg":{"type":"topic","title":"centralManager(_:willRestoreState:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-4zyhg","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:willrestorestate:)-4zyhg","abstract":[],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/connect(_:options:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Establishes a local connection to a peripheral."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"(any "},{"preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"kind":"text","text":"]?)"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/connect(_:options:)","role":"symbol","title":"connect(_:options:)"}}}