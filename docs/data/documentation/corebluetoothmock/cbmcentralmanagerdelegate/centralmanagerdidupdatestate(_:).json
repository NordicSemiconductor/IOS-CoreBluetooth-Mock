{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"central","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CBMCentralManager","kind":"typeIdentifier","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"central","content":[{"type":"paragraph","inlineContent":[{"text":"The central manager whose state has changed.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Commands should only be issued when the state is ","type":"text"},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Any other state implies that scanning has stopped and any","type":"text"},{"text":" ","type":"text"},{"text":"connected peripherals have been disconnected.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate"]]},"abstract":[{"text":"Invoked whenever the central manager’s state has been updated.","type":"text"}],"metadata":{"required":true,"symbolKind":"method","title":"centralManagerDidUpdateState(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"text":")","kind":"text"}],"externalID":"s:17CoreBluetoothMock25CBMCentralManagerDelegateP07centralE14DidUpdateStateyyAA0dE0CF","role":"symbol","modules":[{"name":"CoreBluetoothMock"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanagerdidupdatestate(_:)"]}],"seeAlsoSections":[{"title":"Initialization","anchor":"Initialization","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)"],"generated":true}],"sections":[],"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManagerDidUpdateState(_:)":{"required":true,"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanagerdidupdatestate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"centralManagerDidUpdateState"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"kind":"text","text":")"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)","title":"centralManagerDidUpdateState(_:)","abstract":[{"text":"Invoked whenever the central manager’s state has been updated.","type":"text"}],"kind":"symbol","type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"role":"collection","url":"\/documentation\/corebluetoothmock","abstract":[{"text":"Test ","type":"text"},{"inlineContent":[{"type":"text","text":"CoreBluetooth"}],"type":"strong"},{"text":" features in your app using mocks.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","title":"CoreBluetoothMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState/poweredOn":{"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmmanagerstate\/poweredon","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"poweredOn"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn","title":"CBMManagerState.poweredOn","abstract":[{"type":"text","text":"A state that indicates Bluetooth is currently powered on and available to use."}],"kind":"symbol","type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:willRestoreState:)":{"required":true,"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:willrestorestate:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManager","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","text":"CBMCentralManager","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)","title":"centralManager(_:willRestoreState:)","abstract":[{"type":"text","text":"For apps that opt-in to state preservation and restoration, this is the"},{"type":"text","text":" "},{"type":"text","text":"first method invoked when your app is relaunched into the background to"},{"type":"text","text":" "},{"type":"text","text":"complete some Bluetooth-related task."}],"kind":"symbol","type":"topic","defaultImplementations":1},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate":{"role":"symbol","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate","kind":"symbol","abstract":[{"text":"A protocol that provides updates for the discovery and management of peripheral devices.","type":"text"}],"title":"CBMCentralManagerDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerDelegate"}],"navigatorTitle":[{"text":"CBMCentralManagerDelegate","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/connect(_:options:)":{"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/connect(_:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","text":"CBMPeripheral","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?)"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","title":"connect(_:options:)","abstract":[{"type":"text","text":"Establishes a local connection to a peripheral."}],"kind":"symbol","type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:didUpdateANCSAuthorizationFor:)":{"kind":"symbol","abstract":[{"type":"text","text":"This method is invoked when the authorization status changes for a"},{"type":"text","text":" "},{"type":"text","text":"peripheral connected with "},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"option "},{"type":"codeVoice","code":"CBMConnectPeripheralOptionRequiresANCS"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManager","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CBMCentralManager","kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"didUpdateANCSAuthorizationFor"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral"},{"kind":"text","text":")"}],"title":"centralManager(_:didUpdateANCSAuthorizationFor:)","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)","required":true,"defaultImplementations":1,"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:didupdateancsauthorizationfor:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManager"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","title":"CBMCentralManager","abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManager"}]}}}