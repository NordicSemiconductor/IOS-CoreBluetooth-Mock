{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate"]]},"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:17CoreBluetoothMock25CBMCentralManagerDelegateP07centralE14DidUpdateStateyyAA0dE0CF","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","text":"CBMCentralManager","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"centralManagerDidUpdateState(_:)","roleHeading":"Instance Method","modules":[{"name":"CoreBluetoothMock"}]},"seeAlsoSections":[{"title":"Initialization","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-9qavl","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh"],"generated":true,"anchor":"Initialization"}],"abstract":[{"type":"text","text":"Invoked whenever the central manager’s state has been updated."}],"kind":"symbol","variants":[{"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanagerdidupdatestate(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"central"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The central manager whose state has changed.","type":"text"}],"type":"paragraph"}],"name":"central"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Commands should only be issued when the state is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any other state implies that scanning has stopped and any"},{"text":" ","type":"text"},{"type":"text","text":"connected peripherals have been disconnected."}]}],"kind":"content"}],"sections":[],"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:willRestoreState:)-9qavl":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"centralManager"},{"kind":"text","text":"("},{"text":"CBMCentralManager","kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:willRestoreState:)-9qavl","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"For apps that opt-in to state preservation and restoration, this is the"},{"type":"text","text":" "},{"text":"first method invoked when your app is relaunched into the background to","type":"text"},{"type":"text","text":" "},{"text":"complete some Bluetooth-related task.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:willrestorestate:)-9qavl","defaultImplementations":1,"title":"centralManager(_:willRestoreState:)","required":true},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManagerDidUpdateState(_:)":{"abstract":[{"type":"text","text":"Invoked whenever the central manager’s state has been updated."}],"type":"topic","required":true,"title":"centralManagerDidUpdateState(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanagerdidupdatestate(_:)","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManagerDidUpdateState(_:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate":{"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"CBMCentralManagerDelegate","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","abstract":[{"type":"text","text":"A protocol that provides updates for the discovery and management of peripheral devices."}],"type":"topic","title":"CBMCentralManagerDelegate","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState/poweredOn":{"role":"symbol","title":"CBMManagerState.poweredOn","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmmanagerstate\/poweredon","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"poweredOn"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn","abstract":[{"type":"text","text":"A state that indicates Bluetooth is currently powered on and available to use."}],"kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test "},{"inlineContent":[{"text":"CoreBluetooth","type":"text"}],"type":"strong"},{"type":"text","text":" features in your app using mocks."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock","role":"collection","title":"CoreBluetoothMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"kind":"symbol","abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"title":"CBMCentralManager","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMCentralManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","navigatorTitle":[{"text":"CBMCentralManager","kind":"identifier"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh":{"title":"centralManager(_:didUpdateANCSAuthorizationFor:)","required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol","type":"topic","abstract":[{"text":"This method is invoked when the authorization status changes for a","type":"text"},{"type":"text","text":" "},{"text":"peripheral connected with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)"},{"text":" ","type":"text"},{"type":"text","text":"option "},{"type":"codeVoice","code":"CBMConnectPeripheralOptionRequiresANCS"},{"type":"text","text":"."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate\/centralManager(_:didUpdateANCSAuthorizationFor:)-6msdh","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"centralManager","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"kind":"text","text":", "},{"text":"didUpdateANCSAuthorizationFor","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"CBMPeripheral","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP"},{"kind":"text","text":")"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate\/centralmanager(_:didupdateancsauthorizationfor:)-6msdh"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/connect(_:options:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Establishes a local connection to a peripheral."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"(any "},{"preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"kind":"text","text":"]?)"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/connect(_:options:)","role":"symbol","title":"connect(_:options:)"}}}