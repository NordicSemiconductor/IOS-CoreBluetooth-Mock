{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"centralManager","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"central","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","text":"CBMCentralManager"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"dict","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"])","kind":"text"}],"languages":["swift"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy\/centralManager(_:willRestoreState:)"},"variants":[{"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy\/centralmanager(_:willrestorestate:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy"]]},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"CBMCentralManagerDelegate.centralManager(_:willRestoreState:)"},{"text":".","type":"text"}],"metadata":{"symbolKind":"method","title":"centralManager(_:willRestoreState:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"centralManager","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","text":"CBMCentralManager","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"willRestoreState"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"])"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"CoreBluetoothMock"}],"externalID":"s:17CoreBluetoothMock30CBMCentralManagerDelegateProxyC07centralE0_16willRestoreStateyAA0dE0C_SDySSypGtF"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy/centralManager(_:willRestoreState:)":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy\/centralManager(_:willRestoreState:)","abstract":[],"kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy\/centralmanager(_:willrestorestate:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"centralManager","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager"},{"text":", ","kind":"text"},{"text":"willRestoreState","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"role":"symbol","title":"centralManager(_:willRestoreState:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy":{"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy","abstract":[{"type":"text","text":"A helper class that allows setting delegate callbacks as closures."}],"type":"topic","role":"symbol","title":"CBMCentralManagerDelegateProxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerDelegateProxy","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegateProxy"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test "},{"inlineContent":[{"text":"CoreBluetooth","type":"text"}],"type":"strong"},{"type":"text","text":" features in your app using mocks."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock","role":"collection","title":"CoreBluetoothMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"kind":"symbol","abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"title":"CBMCentralManager","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMCentralManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","navigatorTitle":[{"text":"CBMCentralManager","kind":"identifier"}],"role":"symbol"}}}