{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy\/didUpdateState"},"metadata":{"role":"symbol","symbolKind":"property","externalID":"s:17CoreBluetoothMock30CBMCentralManagerDelegateProxyC14didUpdateStateyAA0dE0CcSgvp","roleHeading":"Instance Property","title":"didUpdateState","modules":[{"name":"CoreBluetoothMock"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didUpdateState"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"CBMCentralManager","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager"},{"kind":"text","text":") -> ())?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy\/didupdatestate"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didUpdateState"},{"kind":"text","text":": (("},{"preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","kind":"typeIdentifier","text":"CBMCentralManager"},{"kind":"text","text":") -> ())?"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy/didUpdateState":{"kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"didUpdateState"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","text":"CBMCentralManager"},{"text":") -> ())?","kind":"text"}],"title":"didUpdateState","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy\/didUpdateState","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy\/didupdatestate"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManager"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","title":"CBMCentralManager","abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManager"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy":{"type":"topic","title":"CBMCentralManagerDelegateProxy","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegateProxy"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerDelegateProxy"}],"kind":"symbol","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy","abstract":[{"type":"text","text":"A helper class that allows setting delegate callbacks as closures."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"role":"collection","url":"\/documentation\/corebluetoothmock","abstract":[{"text":"Test ","type":"text"},{"inlineContent":[{"type":"text","text":"CoreBluetooth"}],"type":"strong"},{"text":" features in your app using mocks.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","title":"CoreBluetoothMock"}}}